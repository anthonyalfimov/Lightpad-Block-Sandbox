/*
<metadata description="A particle randomly traversing the LED grid of your Lightpad Block!">
          details="Tap to start or stop the particle, press the side button to display  particle coordinates."
          target="Lightpad">
    <variables>
        <variable name="prtColour"  displayName="Particle Colour" type="colour" value="0xFFFF00" />
        <variable name="colourMode" displayName="Colour Mode"    type="option" options="Normal;Rainbow;Disco"    value="Normal"     />
        <variable name="fade"       displayName="Trail Fade Rate"              type="int"    min="0"   max="10"  value="1"          />
        <variable name="boundary"   displayName="Boundary Conditions" type="option" options="Bounce;Periodic"    value="Bounce"     />
    </variables>
</metadata>
*/


//==============================================================================
//  Global Variables
//==============================================================================

// Position
int x;
int y;

// Direction
int dir;

// State variables
bool isRunning;         // is simulation running
bool isDisplay;         // is display mode on

// Colour variables
int hue;
int hueRate;

//==============================================================================
//  Initialization
//==============================================================================

void initialise()
{
    x = 7;
    y = 7;
    isRunning = false;
    isDisplay = false;

    hue = 0;
    hueRate = 4;
    if (colourMode == 1)
        prtColour = makeARGBfromAHSV(255, hue, 255, 255);
}

//==============================================================================
//  Event handlers
//==============================================================================

void touchStart (int index, float x, float y, float z, float vz)
{
    isRunning = !isRunning;
}


void handleButtonDown (int index)
{
    isDisplay = !isDisplay;
}

//==============================================================================
//  Colour functions
//==============================================================================

// Integer HSV to RGB conversion (All-integer function)
// All parameters are assumed to be 8 bit (0 - 255)
int makeARGBfromAHSV(int alpha, int h, int s, int v)
{
    // If grayscale:
    if (s == 0)
        return makeARGB(alpha, v, v, v);

    int region     = h / 43;
    int remainder  = h - (region * 43);   // range 0 - 42

    int p, q, t;
    p = v * (255 - s) / 255;
    q = v * (255 - (s * remainder) / 43) / 255;
    t = v * (255 - (s * (43 - remainder)) / 43) / 255;

    if (region == 0)
        return makeARGB(alpha, v, t, p);
    else if (region == 1)
        return makeARGB(alpha, q, v, p);
    else if (region == 2)
        return makeARGB(alpha, p, v, t);
    else if (region == 3)
        return makeARGB(alpha, p, q, v);
    else if (region == 4)
        return makeARGB(alpha, t, p, v);
    else
        return makeARGB(alpha, v, p, q);
}

//==============================================================================
//  Repaint loop
//==============================================================================

void repaint()
{
// Clear display with fade:
    if (isDisplay)
    {
        drawNumber(x, 0xFF000000, 1, 1);
        drawNumber(y, 0xFF000000, 1, 9);
    }
    blendRect(makeARGB(fade * 10, 0, 0, 0), 0, 0, 15, 15);

// Draw particle:
    fillPixel(prtColour, x ,y);


// Update coordinates:
    if (isRunning)
    {
        int choice = getRandomInt(4);

        // Periodic Boundary Conditions:
        if (boundary == 1)
        {
            if (choice == 0)
                x = (x + 1) % 15;
            else if (choice == 1)
                x = (15 + x - 1) % 15;
            else if (choice == 2)
                y = (y + 1) % 15;
            else
                y = (15 + y - 1) % 15;
        }
        // Bounce off the walls:
        else
        {
            if (choice == 0)
                if (x == 14)
                    x -= 1;
                else
                    x += 1;
            else if (choice == 1)
                if (x == 0)
                    x += 1;
                else
                    x -= 1;
            else if (choice == 2)
                if (y == 14)
                    y -= 1;
                else
                    y += 1;
            else
                if (y == 0)
                    y += 1;
                else
                    y -= 1;
        }

        // Update colour:
        if (colourMode == 1)
        {
            hue = (hue + hueRate) % 256;
            prtColour = makeARGBfromAHSV(255, hue, 255, 255);
        }
        else if (colourMode == 2)
            prtColour = makeARGBfromAHSV(255,
                                         getRandomInt(256),
                                         255,
                                         255);
    }

// Print coordinates:
    if (isDisplay)
    {
        drawNumber(x, 0xFFFFFFFF, 1, 1);
        drawNumber(y, 0xFFFFFFFF, 1, 9);
    }
}



/*
<display backgroundColour="0xFFD3DD79" textColour ="0xFF000000">
    <pixels>
        <pixel index="16" colour="0xFF242400" />
        <pixel index="19" colour="0xFF767600" />
        <pixel index="20" colour="0xFF767600" />
        <pixel index="21" colour="0xFF959500" />
        <pixel index="22" colour="0xFF959500" />
        <pixel index="23" colour="0xFF959500" />
        <pixel index="26" colour="0xFFFFFF00" />
        <pixel index="27" colour="0xFFFFFF00" />
        <pixel index="31" colour="0xFF242400" />
        <pixel index="34" colour="0xFF767600" />
        <pixel index="35" colour="0xFF767600" />
        <pixel index="37" colour="0xFF959500" />
        <pixel index="38" colour="0xFF959500" />
        <pixel index="40" colour="0xFFFFFFA3" />
        <pixel index="41" colour="0xFFFFFF00" />
        <pixel index="42" colour="0xFFFFFF00" />
        <pixel index="43" colour="0xFFFFFF00" />
        <pixel index="46" colour="0xFF242400" />
        <pixel index="47" colour="0xFF242400" />
        <pixel index="48" colour="0xFF242400" />
        <pixel index="50" colour="0xFF767600" />
        <pixel index="52" colour="0xFF959500" />
        <pixel index="54" colour="0xFFFFFFA3" />
        <pixel index="55" colour="0xFFFFFFFF" />
        <pixel index="56" colour="0xFFFFFFA3" />
        <pixel index="58" colour="0xFFFFFF00" />
        <pixel index="62" colour="0xFF333300" />
        <pixel index="63" colour="0xFF333300" />
        <pixel index="65" colour="0xFF767600" />
        <pixel index="67" colour="0xFF959500" />
        <pixel index="70" colour="0xFFFFFFA3" />
        <pixel index="73" colour="0xFFFFFF00" />
        <pixel index="77" colour="0xFF333300" />
        <pixel index="80" colour="0xFF767600" />
        <pixel index="82" colour="0xFF959500" />
        <pixel index="83" colour="0xFF959500" />
        <pixel index="86" colour="0xFFFFFF00" />
        <pixel index="87" colour="0xFFFFFF00" />
        <pixel index="88" colour="0xFFFFFF00" />
        <pixel index="91" colour="0xFF424200" />
        <pixel index="92" colour="0xFF424200" />
        <pixel index="95" colour="0xFF767600" />
        <pixel index="98" colour="0xFF959500" />
        <pixel index="99" colour="0xFF959500" />
        <pixel index="101" colour="0xFFFFFF00" />
        <pixel index="106" colour="0xFF424200" />
        <pixel index="110" colour="0xFF767600" />
        <pixel index="111" colour="0xFF767600" />
        <pixel index="114" colour="0xFF959500" />
        <pixel index="116" colour="0xFFFFFF00" />
        <pixel index="117" colour="0xFFFFFF00" />
        <pixel index="118" colour="0xFFFFFF00" />
        <pixel index="121" colour="0xFF424200" />
        <pixel index="122" colour="0xFF424200" />
        <pixel index="123" colour="0xFF424200" />
        <pixel index="124" colour="0xFF424200" />
        <pixel index="126" colour="0xFF767600" />
        <pixel index="128" colour="0xFFBDBD00" />
        <pixel index="129" colour="0xFF959500" />
        <pixel index="133" colour="0xFFFFFF00" />
        <pixel index="138" colour="0xFF525200" />
        <pixel index="139" colour="0xFF424200" />
        <pixel index="141" colour="0xFF525200" />
        <pixel index="143" colour="0xFFBDBD00" />
        <pixel index="148" colour="0xFFBDBD00" />
        <pixel index="153" colour="0xFF525200" />
        <pixel index="156" colour="0xFF525200" />
        <pixel index="158" colour="0xFFBDBD00" />
        <pixel index="160" colour="0xFFBDBD00" />
        <pixel index="161" colour="0xFFBDBD00" />
        <pixel index="163" colour="0xFFBDBD00" />
        <pixel index="167" colour="0xFF525200" />
        <pixel index="168" colour="0xFF525200" />
        <pixel index="171" colour="0xFF525200" />
        <pixel index="173" colour="0xFFBDBD00" />
        <pixel index="175" colour="0xFFBDBD00" />
        <pixel index="176" colour="0xFFBDBD00" />
        <pixel index="178" colour="0xFFBDBD00" />
        <pixel index="182" colour="0xFF525200" />
        <pixel index="183" colour="0xFF525200" />
        <pixel index="184" colour="0xFF525200" />
        <pixel index="185" colour="0xFF525200" />
        <pixel index="186" colour="0xFF525200" />
        <pixel index="188" colour="0xFFBDBD00" />
        <pixel index="190" colour="0xFFBDBD00" />
        <pixel index="191" colour="0xFFBDBD00" />
        <pixel index="192" colour="0xFFBDBD00" />
        <pixel index="193" colour="0xFFBDBD00" />
        <pixel index="197" colour="0xFF525200" />
        <pixel index="198" colour="0xFF525200" />
        <pixel index="202" colour="0xFFBDBD00" />
        <pixel index="203" colour="0xFFBDBD00" />
        <pixel index="204" colour="0xFFBDBD00" />
        <pixel index="205" colour="0xFFBDBD00" />
    </pixels>
</display>
*/